version: '3.1'

volumes:
  postgres_data:
    driver: local
  elasticsearch-data:
    driver: local

services:
  order:
    image: order-service:latest
    build:
      context: .
    container_name: order
    ports:
      - '8082:8082'
    depends_on:
      - mysql
      - kafka
      - eureka
      - zipkin
      - keycloak
    environment:
      - EUREKA_URL=http://eureka:8761/eureka
      - ZIPKIN_URL=http://zipkin:9411/
      - DB_URL=jdbc:mysql://mysql:3306/order_db?useUnicode=yes&characterEncoding=UTF-8&serverTimezone=Europe/Moscow
      - DB_USER=order_user
      - DB_PASSWORD=password
      - SERVICE_KAFKA_HOST=kafka:9092
      - IDENTITY_SERVICE_JWK_URL=http://keycloak:8080/auth/realms/test/protocol/openid-connect/certs
      - IDENTITY_SERVICE_ISSUER_URL=http://keycloak:8080/auth/realms/test

  mysql:
    image: 'mysql:8'
    expose:
      - '3306'
    ports:
      - '3306:3306'
    environment:
      - MYSQL_ROOT_PASSWORD=password
      - MYSQL_DATABASE=order_db
      - MYSQL_USER=order_user
      - MYSQL_PASSWORD=password
      - ALLOW_PUBLIC_KEY_RETRIEVAL=true
    command: [ "--character-set-server=utf8", "--collation-server=utf8_general_ci" ]

  zookeeper:
    image: confluentinc/cp-zookeeper:latest
    environment:
      ZOOKEEPER_CLIENT_PORT: 2181
      ZOOKEEPER_TICK_TIME: 2000
    ports:
      - 22181:2181

  postgres:
    image: postgres
    volumes:
      - postgres_data:/var/lib/postgresql/data
    environment:
      POSTGRES_DB: keycloak
      POSTGRES_USER: keycloak
      POSTGRES_PASSWORD: password

  zipkin:
    image: openzipkin/zipkin
    container_name: zipkin
    environment:
      - STORAGE_TYPE=mem
    ports:
      - 9411:9411

  keycloak:
    image: quay.io/keycloak/keycloak:latest
    environment:
      DB_VENDOR: POSTGRES
      DB_ADDR: postgres
      DB_DATABASE: keycloak
      DB_USER: keycloak
      DB_SCHEMA: public
      DB_PASSWORD: password
      KEYCLOAK_USER: admin
      KEYCLOAK_PASSWORD: Pa55w0rd
    ports:
      - 8080:8080
    depends_on:
      - postgres

  kafka:
    image: confluentinc/cp-kafka:latest
    depends_on:
      - zookeeper
    ports:
      - 9092:9092
    environment:
      KAFKA_HEAP_OPTS: "-Xmx256M -Xms128M"
      KAFKA_BROKER_ID: 1
      KAFKA_AUTO_CREATE_TOPICS_ENABLE: "true"
      KAFKA_ZOOKEEPER_CONNECT: zookeeper:2181
      KAFKA_ADVERTISED_LISTENERS: PLAINTEXT://kafka:9092
      KAFKA_LISTENER_SECURITY_PROTOCOL_MAP: PLAINTEXT:PLAINTEXT,PLAINTEXT_HOST:PLAINTEXT
      KAFKA_INTER_BROKER_LISTENER_NAME: PLAINTEXT
      KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR: 1

  eureka:
    image: eureka-server:latest
    ports:
      - 8761:8761
    environment:
      - EUREKA_URL=http://eureka:8761/eureka

  prometheus:
    image: prom/prometheus:latest
    volumes:
      - ~/prometheus-grafana/prometheus/prometheus.yml:/etc/prometheus/prometheus.yml
    ports:
      - 9090:9090

  grafana:
    image: grafana/grafana:latest
    volumes:
      - ~/prometheus-grafana/grafana/grafana.ini:/etc/grafana/grafana.ini
      - ~/prometheus-grafana/grafana/datasource.yml:/etc/grafana/provisioning/datasources/datasource.yaml
    ports:
      - 3000:3000

  elasticsearch:
    image: docker.elastic.co/elasticsearch/elasticsearch:7.12.0
    container_name: elasticsearch
    environment:
      - xpack.security.enabled=false
      - discovery.type=single-node
    ulimits:
      memlock:
        soft: -1
        hard: -1
      nofile:
        soft: 65536
        hard: 65536
    cap_add:
      - IPC_LOCK
    volumes:
      - elasticsearch-data:/usr/share/elasticsearch/data
    ports:
      - 9200:9200
      - 9300:9300

  kibana:
    container_name: kibana
    image: docker.elastic.co/kibana/kibana:7.12.0
    environment:
      - ELASTICSEARCH_HOSTS=http://elasticsearch:9200
    ports:
      - 5601:5601
    depends_on:
      - elasticsearch

  logstash:
    container_name: logstash
    image: docker.elastic.co/logstash/logstash:6.3.2
    ports:
      - 5046:5046
    volumes:
      - ./logstash.conf:/logstash/logstash.conf