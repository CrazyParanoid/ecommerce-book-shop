spring:
  application:
    name: order-service
  main:
    allow-bean-definition-overriding: true
  zipkin:
    base-url: ${ZIPKIN_URL:http://zipkin:9411/}
  sleuth:
    scheduled:
      enabled: false
  cloud:
    stream:
      kafka:
        binder:
          replicationFactor: 1
          brokers: kafka:9092
          autoCreateTopics: true
      bindings:
        orderChannel:
          binder: kafka
          destination: ${ORDER_EVENTS_TOPIC:orderEventsTopic}
          contentType: application/json
    discovery:
      enabled: false
  datasource:
    driverClassName: com.mysql.jdbc.Driver
    url: ${DB_URL:jdbc:mysql://mysql:3306/order_db?useUnicode=yes&characterEncoding=UTF-8&serverTimezone=Europe/Moscow}
    username: ${DB_USER:order_user}
    password: ${DB_PASSWORD:password}
  jpa:
    hibernate.ddl-auto: validate
  security:
    oauth2:
      resourceserver:
        jwt:
          jwk-set-uri: ${IDENTITY_SERVICE_JWK_URL:http://keycloak:8080/auth/realms/test/protocol/openid-connect/certs}
          issuer-uri: ${IDENTITY_SERVICE_ISSUER_URL:http://keycloak:8080/auth/realms/test}
events:
  delay: 4000

eureka:
  client:
    serviceUrl:
      defaultZone: ${EUREKA_URL:http://eureka:8761/eureka}

management:
  endpoints:
    web:
      exposure:
        include: health,prometheus
  metrics:
    export:
      prometheus:
        enabled: true
  endpoint:
    metrics:
      enabled: true
    health:
      show-details: always